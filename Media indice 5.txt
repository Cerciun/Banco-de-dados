DO $$
DECLARE
   v_query TEXT := 'EXPLAIN ANALYZE WITH EficienciaZona AS (
       SELECT z.Zona, t.Marca, t.Modelo,
       COUNT(DISTINCT f.CNH) as total_motoristas,
       COUNT(DISTINCT c.CliId) as total_clientes,
       AVG(EXTRACT(EPOCH FROM (f.DataHoraOut - f.DataHoraIn))/60) as tempo_medio_atendimento,
       AVG(f.KmIn) as media_km,
       COUNT(c.DataPedido) as total_corridas
       FROM Zona z
       JOIN Fila f ON z.Zona = f.Zona
       JOIN Motorista m ON f.CNH = m.CNH
       JOIN Taxi t ON m.Placa = t.Placa
       LEFT JOIN Corrida c ON t.Placa = c.Placa
       GROUP BY z.Zona, t.Marca, t.Modelo)
   SELECT * FROM EficienciaZona WHERE total_corridas > 0 ORDER BY Zona, total_corridas DESC';
   start_time timestamp;
   total_time numeric[] := ARRAY[0,0,0,0,0];
BEGIN
   FOR i IN 1..100 LOOP
       start_time := clock_timestamp();
       SET enable_hashjoin = on;
       EXECUTE v_query;
       total_time[1] := total_time[1] + EXTRACT(EPOCH FROM (clock_timestamp() - start_time)) * 1000;

       start_time := clock_timestamp();
       SET enable_hashjoin = off;
       SET enable_mergejoin = on;
       EXECUTE v_query;
       total_time[2] := total_time[2] + EXTRACT(EPOCH FROM (clock_timestamp() - start_time)) * 1000;

       start_time := clock_timestamp();
       SET enable_bitmapscan = on;
       EXECUTE v_query;
       total_time[3] := total_time[3] + EXTRACT(EPOCH FROM (clock_timestamp() - start_time)) * 1000;

       start_time := clock_timestamp();
       SET enable_indexscan = on;
       EXECUTE v_query;
       total_time[4] := total_time[4] + EXTRACT(EPOCH FROM (clock_timestamp() - start_time)) * 1000;

       start_time := clock_timestamp();
       SET enable_indexonlyscan = on;
       EXECUTE v_query;
       total_time[5] := total_time[5] + EXTRACT(EPOCH FROM (clock_timestamp() - start_time)) * 1000;
   END LOOP;

   RAISE NOTICE 'Média Hash: %', ROUND((total_time[1] / 100)::numeric, 3);
   RAISE NOTICE 'Média B-tree: %', ROUND((total_time[2] / 100)::numeric, 3);
   RAISE NOTICE 'Média BRIN: %', ROUND((total_time[3] / 100)::numeric, 3);
   RAISE NOTICE 'Média Parcial: %', ROUND((total_time[4] / 100)::numeric, 3);
   RAISE NOTICE 'Média Composto: %', ROUND((total_time[5] / 100)::numeric, 3);
END $$;